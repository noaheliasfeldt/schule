definitions:
  Model.Item:
    properties:
      id:
        type: integer
      itemBBD:
        type: integer
      itemCount:
        type: integer
      itemEAN:
        type: integer
      itemName:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/additem:
    post:
      consumes:
      - application/json
      description: Add an item by barcode number
      parameters:
      - description: EAN (barcode) number
        in: query
        name: ean
        required: true
        type: string
      - description: MHD (expiration date)
        in: query
        name: mhd
        required: true
        type: string
      - description: Count (amount of item to add)
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: add item
  /api/deleteitem:
    delete:
      consumes:
      - application/json
      description: Delete an item by EAD, MHD, or ID
      parameters:
      - description: EAD (barcode) number
        in: query
        name: ead
        type: string
      - description: MHD (expiration date)
        in: query
        name: mhd
        type: string
      - description: Item ID
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: delete item
  /api/getItems/{id}:
    get:
      consumes:
      - application/json
      description: Get all food items from the database or a specific item by ID or
        EAN
      parameters:
      - description: Specifiy EAN to get a specific item
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Model.Item'
            type: array
      summary: Get all food items or a specific item by EAN
  /api/viewexpiringitems:
    get:
      consumes:
      - application/json
      description: View items that expire in the next 3 days or earlier
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: view items expiring soon
swagger: "2.0"
